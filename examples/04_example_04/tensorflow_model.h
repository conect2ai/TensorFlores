namespace Conect2AI {
namespace TensorFlores {
class MultilayerPerceptron {
public: 

float* predict(float *x) { 
    float* y_pred = new float[1];
static const float w1[3][16] = {
    {0.2285795658826828, 0.2654980421066284, 0.14224828779697418, 0.27832165360450745, 0.34304168820381165, -0.15471047163009644, 0.08229552954435349, 0.03697875887155533, 0.574588418006897, 0.27221933007240295, 0.3698675036430359, 0.18740126490592957, -0.26425471901893616, 0.4140512943267822, 0.23558038473129272, 0.5731029510498047},
    {0.4169730246067047, -0.022036394104361534, -0.02404852770268917, 0.33149805665016174, 0.10844071209430695, -0.25959524512290955, 0.02713972143828869, 0.005249979440122843, -0.3045799136161804, -0.53950434923172, 0.0019521538633853197, 0.11642161011695862, 0.1585088074207306, -0.40965735912323, 0.1827041506767273, -0.008208598010241985},
    {0.3087541162967682, 0.3623913824558258, 0.5005401968955994, 0.30651500821113586, -0.6817643046379089, -0.47381412982940674, -1.0479168891906738, 0.5235039591789246, 0.3144211769104004, -0.016522223129868507, 0.4945857524871826, 0.19951751828193665, 0.5416309833526611, 0.07596232742071152, 0.28707197308540344, 0.16157488524913788}
};

static const float b1[16] = {-0.051865994930267334, -0.135383740067482, -0.20290672779083252, 0.03921088948845863, 0.11837867647409439, 0.0, 0.13745982944965363, -0.405420184135437, 0.1089460700750351, 0.02301967330276966, 0.04282623901963234, -0.027158712968230247, -0.12495105713605881, -0.09291797131299973, -0.08318977802991867, -0.18109863996505737};

static const float w2[16][8] = {
    {-0.45721670985221863, 0.36371609568595886, -0.18037621676921844, 0.08617984503507614, -0.10020067542791367, 0.0014097559032961726, -0.01397716999053955, -0.3417125940322876},
    {0.2709604799747467, 0.2531306743621826, -0.03414589911699295, -3.400634765625, 0.03892139717936516, -0.1607084721326828, 0.2832961082458496, 0.10097157955169678},
    {-0.4251288175582886, -0.39256396889686584, 0.09132003784179688, -0.23725764453411102, 0.6893159747123718, -0.31290173530578613, -0.25128912925720215, -0.14060711860656738},
    {0.3814171552658081, 0.14286643266677856, 0.20744800567626953, -0.011191272176802158, 0.41466155648231506, -0.42649081349372864, -0.4522479772567749, -0.11835336685180664},
    {-0.38241833448410034, 0.2602546215057373, 0.40950852632522583, 0.09779153019189835, -0.35502174496650696, 0.04755621775984764, 0.17297589778900146, 0.079537034034729},
    {0.04599440097808838, -0.3414957523345947, 0.32582855224609375, -0.35420095920562744, -0.0824660062789917, 0.02605724334716797, 0.2630993127822876, 0.2504962682723999},
    {-0.1689077615737915, -0.5559858679771423, -0.2283678948879242, 0.44406020641326904, 0.16926319897174835, 0.47121739387512207, 0.4916926622390747, -0.4270491600036621},
    {0.2092050313949585, 0.48301342129707336, -0.3657369613647461, 0.08357226848602295, -0.4023993909358978, 0.08356094360351562, 0.3327341079711914, 0.16125214099884033},
    {-0.04045545309782028, 0.40849053859710693, -0.322429895401001, 0.1846965104341507, -0.36435219645500183, -0.4511968493461609, -0.05307912826538086, 0.07183253765106201},
    {-0.5155174136161804, 0.013202873058617115, 0.47204136848449707, 0.49627530574798584, -0.34267085790634155, 0.24888654053211212, -0.257635235786438, -0.0009083747863769531},
    {-0.26016876101493835, 0.12742996215820312, -0.23311546444892883, 0.2784201204776764, 0.4527656137943268, 0.36968228220939636, -0.3261110782623291, -0.24419116973876953},
    {-0.2670031189918518, -0.1274440437555313, -0.4974692165851593, -0.2716003954410553, 0.06201517581939697, -0.48278459906578064, 0.09100353717803955, 0.48732030391693115},
    {0.06694185733795166, 0.5423213243484497, 0.30029335618019104, -0.2602654695510864, 0.23387029767036438, -0.26041820645332336, -0.28614330291748047, -0.021339058876037598},
    {0.41482973098754883, 0.21402065455913544, -0.26185739040374756, -0.561230480670929, 0.43670982122421265, -0.28783878684043884, -0.014467954635620117, -0.19898784160614014},
    {-0.02823956497013569, 0.09542258083820343, -0.3251337707042694, -0.021659376099705696, -0.3620840907096863, 0.45004168152809143, -0.4622979164123535, -0.29974067211151123},
    {0.22741484642028809, 0.17501232028007507, -0.10296893119812012, 0.9117356538772583, -0.5788694620132446, -0.3812256157398224, 0.32889044284820557, -0.35695552825927734}
};

static const float b2[8] = {-0.022594112902879715, -0.0017149499617516994, -0.0210123173892498, -0.145577073097229, 0.07587410509586334, -0.013835441321134567, 0.0, 0.0};

static const float w3[8][1] = {
    {0.5856579542160034},
    {0.6663092970848083},
    {0.09420187026262283},
    {-0.6474980115890503},
    {-0.6447522640228271},
    {-0.2699783146381378},
    {-0.5199392437934875},
    {0.4109450578689575}
};

static const float b3[1] = {0.007828311063349247};

    // Input Layer 
    float z1[16];
    for (int i = 0; i < 16; i++)
    {
        z1[i] = b1[i];
        for (int j = 0; j < 3; j++)
        {
            z1[i] += x[j] * w1[j][i];
        }
        z1[i] = relu(z1[i]);
    }

    // Hidden Layer 2
    float z2[8];
    for (int i = 0; i < 8; i++)
    {
        z2[i] = b2[i];
        for (int j = 0; j < 16; j++)
        {
            z2[i] += z1[j] * w2[j][i];
        }
        z2[i] = relu(z2[i]);
    }

    // Output Layer
    float z3[1];
    for (int k = 0; k < 1; k++)
    {
        z3[k] = b3[k];
        for (int j = 0; j < 8; j++)
        {
            z3[k] += z2[j] * w3[j][k];
        }
        y_pred[k] = linear(z3[k]);
    }

    return y_pred;
}

void free_prediction(float* prediction) {
    delete[] prediction;
}

protected:
float linear(float x)
{
    return x;
};

float relu(float x)
{
    return x > 0 ? x : 0;
};

};
}
}
