namespace Conect2AI {
namespace TensorFlores {
class MultilayerPerceptron {
public: 

float* predict(float *x) {
    float* y_pred = new float[1];
static const float center_bias[10] = {0.00010215985826635605, 0.006732687490594896, -0.02950002537188572, 0.017582526832766652, 0.010890416086632179, -0.026729979457111197, -0.01844053522569908, -0.014468796308583772, -0.007894700256005908, -0.0037439937749622256};

static const float centers_weights[144] = {-0.16472166540057215, -1.3189779787766966, -1.903701801365944, 1.1653238877453183, 0.6979194232837418, 0.5596694645277294, 0.4258959180168385, -0.7844215229879007, 1.0562813891255107, -0.9984179598545366, 0.30954778709071823, -1.8279283822629906, -0.873680973621183, 0.2648841497840563, 0.3066782187594451, 1.76949336267949, 1.9170807278707689, 0.04506059801060035, 0.9413366064050688, -1.5926025821478966, 0.9144431819871668, 0.4923948238440571, -0.8930920575045789, 0.7425815991919884, -1.6716265349098656, 1.1497586341537007, 0.7572064233801534, 0.5101984546976128, 0.9350229652509853, 0.9115574451194322, -1.0077742176922464, 1.0212925340786847, -1.7289972108687062, -1.8219652342999524, 0.693452148572343, 0.22165574432159132, 0.5232990086208752, 0.9900541727135794, 0.2893757924124589, -2.4864091475750425, 1.184278309915316, 0.5325504945790327, 0.8926975487503364, 0.26759058152743254, -0.7345640615013285, 0.8396365961425569, 1.7163093777479717, 1.2319695993781938, 0.3552685605290544, 0.6152163144257207, -0.6746284892584915, -1.3489862431196884, 0.5562379002817389, -1.8257567980473792, -1.1812023411912318, 0.3266446284927531, -1.7843308879331492, 0.5689766480475971, 0.37589218800214147, 1.602656953500469, 0.3190613558196106, 1.1879949019131817, 0.4083401725891803, 0.9081407534051564, 0.3371534868075328, 0.44216468230676453, 2.8262630677115643, 0.2860282466411811, 1.026970198187473, 0.7176218888988124, 0.5838574042651967, -0.8252751026671842, 0.4578700361076384, -0.7097223465051247, -2.362728275367539, -0.6688616916827013, 0.7100646107173796, 0.8993971600225011, -0.8110799538125086, 0.6645606757659784, 1.7123386557851603, 1.2254918361185954, -0.7804299931165624, 0.24195967677344016, 0.7058193600511099, -0.627452429388079, 0.7847352601494603, -0.8629680063523932, 0.8221650525874995, 1.1028266333765573, -1.2422021014532685, 0.8728604405118087, 0.3124986442552178, 0.8155556661717893, -1.3061114050386007, -1.7597927635311774, 3.4116644580675493, -0.9732066334091535, -0.6089742354649502, 0.7286846594681868, 0.5005761457129443, -1.2551640985872572, -1.9113312648248688, 0.9263591453830008, -2.508543638813721, -2.238790240037516, -1.8065263835760765, 0.2698102058819025, -0.6249927294352761, -1.2898889846799018, 1.2051735005653619, 0.8657645777429495, 0.21178125268100445, -0.8489548734130372, -1.467788233499814, 0.3335480724852074, 0.7712588989563101, -0.8391269473354999, -2.1771262499430595, 1.1712012058011105, -0.6172831021494571, -1.0045928578633065, 0.9831706221566576, -0.8820023022104395, -1.3867960158649908, -1.3944032344166404, 0.46407395611571856, 0.38500981901617815, -0.8583589880577689, -2.9839453135012075, 1.1346376855053601, -0.847729470974487, 0.7654822357752208, -0.5119157914591745, -0.6032661853253871, -0.5984374585251194, -0.5266446981830658, -0.4947619250545843, -0.4796380514397538, -0.47513034352291417, -0.4604206501200756, -0.4493544133162763, -0.4234200854232744, -0.40874507054382};

static const uint8_t w1[3][16] = {
    {17, 133, 1, 2, 3, 4, 137, 5, 17, 6, 7, 134, 8, 9, 139, 10},
    {11, 12, 13, 0, 0, 14, 15, 16, 17, 135, 18, 19, 20, 21, 22, 17},
    {23, 24, 25, 26, 27, 28, 0, 29, 30, 31, 32, 33, 34, 35, 36, 17}
};

static const uint8_t b1[16] = {7, 8, 1, 2, 1, 1, 1, 0, 0, 3, 4, 1, 9, 1, 5, 0};

static const uint8_t w2[16][8] = {
    {37, 0, 35, 38, 39, 40, 41, 42},
    {0, 0, 43, 44, 45, 0, 46, 47},
    {140, 48, 49, 50, 51, 52, 53, 54},
    {141, 55, 56, 57, 58, 59, 17, 60},
    {61, 62, 63, 64, 65, 66, 67, 68},
    {0, 69, 136, 70, 0, 71, 72, 142},
    {143, 17, 58, 61, 73, 74, 75, 0},
    {76, 77, 78, 138, 79, 80, 17, 81},
    {143, 82, 69, 83, 0, 84, 85, 17},
    {86, 87, 142, 88, 89, 90, 91, 92},
    {93, 94, 0, 143, 140, 36, 143, 95},
    {96, 97, 98, 0, 99, 100, 101, 102},
    {98, 103, 104, 0, 0, 105, 106, 107},
    {108, 109, 75, 55, 110, 111, 112, 113},
    {17, 114, 115, 116, 117, 118, 119, 17},
    {143, 120, 121, 122, 123, 69, 124, 125}
};

static const uint8_t b2[8] = {1, 0, 0, 0, 1, 9, 9, 0};

static const uint8_t w3[8][1] = {
    {126},
    {127},
    {128},
    {129},
    {113},
    {130},
    {131},
    {132}
};

static const uint8_t b3[1] = {6};

    // Input Layer 
    float z1[16];
    for (int i = 0; i < 16; i++)
    {
        z1[i] = center_bias[b1[i]];
        for (int j = 0; j < 3; j++)
        {
            z1[i] += x[j] * centers_weights[w1[j][i]];
        }
        z1[i] = relu(z1[i]);    }

    // Hidden Layers 
    float z2[8];
    for (int i = 0; i < 8; i++)
    {
        z2[i] = center_bias[b2[i]];
        for (int j = 0; j < 16; j++)
        {
            z2[i] += z1[j] * centers_weights[w2[j][i]];
        }
        z2[i] = relu(z2[i]);    }

    // Output Layer
    float z3[1];
    for (int k = 0; k < 1; k++)
    {
        z3[k] = center_bias[b3[k]];
        for (int j = 0; j < 8; j++)
        {
            z3[k] += z2[j] * centers_weights[w3[j][k]];
        }
        y_pred[k] = linear(z3[k]);    }

    return y_pred;
}
void free_prediction(float* prediction) {
    delete[] prediction;
}

protected:
float relu(float x)
{
    return x > 0 ? x : 0;
};

float linear(float x)
{
    return x;
};

};
}
}
